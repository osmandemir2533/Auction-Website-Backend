// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyGalaxy_Auction_Data_Access.Context;

#nullable disable

namespace MyGalaxy_Auction_Data_Access.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250413203133_addedfulldata")]
    partial class addedfulldata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidId"));

                    b.Property<decimal>("BidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BidDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BidStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DressId")
                        .HasColumnType("int");

                    b.Property<int>("ElectronicId")
                        .HasColumnType("int");

                    b.Property<int>("EstateId")
                        .HasColumnType("int");

                    b.Property<int>("MusicalInstrumentId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("BidId");

                    b.HasIndex("DressId");

                    b.HasIndex("ElectronicId");

                    b.HasIndex("EstateId");

                    b.HasIndex("MusicalInstrumentId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Dress", b =>
                {
                    b.Property<int>("DressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DressId"));

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DressId");

                    b.HasIndex("SellerId");

                    b.ToTable("Dresses");

                    b.HasData(
                        new
                        {
                            DressId = 1,
                            AdditionalInformation = "Yazlık kırmızı elbise.",
                            AuctionPrice = 0.0,
                            Brand = "Zara",
                            Color = "Kırmızı",
                            EndTime = new DateTime(2025, 4, 20, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(806),
                            Image = "https://media-hosting.imagekit.io/02003bdc067d464b/images.jpg?Expires=1839145220&Key-Pair-Id=K2ZIVPTIP2VGHC&Signature=Z2rZ3zMya8xvwmIDM6hUtRZQq9E9KHrA7J8YCcKGFUCqtl5W5oATJoKRZWXGop-hGoT9pmVPHl~b4IWfoGE5ixZp0ZH7qNy3cbTzsukmtXgTb7G~h4mXsVVE4EWlRbZ9B39bsEesPvZCufADrZuDh0aLokcku7PgNgBMXidsGwC9NWlo2ln~BTVDP8ibGOnAkroV6jCIDZ~UAXwnJoYHTINxUEj5cv0UzaF0xCr-tIJaqdfMyDQBg~SBFbCb5nmLzGofEqyFdOthNCBZwU9SvqNTZaBdw4lB0cfLs7Q82Y46YfVhzxu6JcMaYqORw23age94-kYK8444d6NJKZOagA__",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 450.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(805),
                            Type = "Elbise"
                        },
                        new
                        {
                            DressId = 2,
                            AdditionalInformation = "Şık siyah ceket.",
                            AuctionPrice = 0.0,
                            Brand = "Mango",
                            Color = "Siyah",
                            EndTime = new DateTime(2025, 4, 18, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(810),
                            Image = "https://r.resimlink.com/n1quFS-z.jpg",
                            IsActive = true,
                            Material = "Polyester",
                            Price = 750.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(810),
                            Type = "Ceket"
                        },
                        new
                        {
                            DressId = 3,
                            AdditionalInformation = "Kot pantolon.",
                            AuctionPrice = 0.0,
                            Brand = "LC Waikiki",
                            Color = "Mavi",
                            EndTime = new DateTime(2025, 4, 19, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(814),
                            Image = "https://r.resimlink.com/-Er8laF.jpg",
                            IsActive = true,
                            Material = "Denim",
                            Price = 300.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(813),
                            Type = "Pantolon"
                        },
                        new
                        {
                            DressId = 4,
                            AdditionalInformation = "Keten yazlık elbise.",
                            AuctionPrice = 0.0,
                            Brand = "H&M",
                            Color = "Beyaz",
                            EndTime = new DateTime(2025, 4, 21, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(816),
                            Image = "https://r.resimlink.com/aEmBizZk4.jpg",
                            IsActive = true,
                            Material = "Keten",
                            Price = 520.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(816),
                            Type = "Elbise"
                        },
                        new
                        {
                            DressId = 5,
                            AdditionalInformation = "Kışlık yün ceket.",
                            AuctionPrice = 0.0,
                            Brand = "Pull&Bear",
                            Color = "Lacivert",
                            EndTime = new DateTime(2025, 4, 23, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(819),
                            Image = "https://i.pinimg.com/736x/7e/7a/cd/7e7acd312bc3ca9b5a8882229f4105a8.jpg",
                            IsActive = true,
                            Material = "Yün",
                            Price = 980.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "XL",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(818),
                            Type = "Ceket"
                        },
                        new
                        {
                            DressId = 6,
                            AdditionalInformation = "Günlük pantolon.",
                            AuctionPrice = 0.0,
                            Brand = "Defacto",
                            Color = "Siyah",
                            EndTime = new DateTime(2025, 4, 20, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(823),
                            Image = "https://dfcdn.defacto.com.tr/7/L8123AZ_19HS_BK27_01_01.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 270.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(822),
                            Type = "Pantolon"
                        },
                        new
                        {
                            DressId = 7,
                            AdditionalInformation = "Şık kot ceket.",
                            AuctionPrice = 0.0,
                            Brand = "Colins",
                            Color = "Açık Mavi",
                            EndTime = new DateTime(2025, 4, 22, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(825),
                            Image = "https://cms.brnstc.de/product_images/287x393_retina/cpro/media/images/product/22/8/100131925617000_0_1659510691217.jpg",
                            IsActive = true,
                            Material = "Denim",
                            Price = 680.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(825),
                            Type = "Kot Ceket"
                        },
                        new
                        {
                            DressId = 8,
                            AdditionalInformation = "Kısa yazlık etek.",
                            AuctionPrice = 0.0,
                            Brand = "Stradivarius",
                            Color = "Pembe",
                            EndTime = new DateTime(2025, 4, 17, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(828),
                            Image = "https://i.pinimg.com/originals/46/8b/bf/468bbf53fce1087636df99e6e5c8d91d.jpg",
                            IsActive = true,
                            Material = "Polyester",
                            Price = 240.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(827),
                            Type = "Etek"
                        },
                        new
                        {
                            DressId = 9,
                            AdditionalInformation = "Kışlık mont.",
                            AuctionPrice = 0.0,
                            Brand = "Bershka",
                            Color = "Gri",
                            EndTime = new DateTime(2025, 4, 24, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(830),
                            Image = "https://static.glami.com.tr/img/228x298be/299370963.jpg",
                            IsActive = true,
                            Material = "Polyester",
                            Price = 1100.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "XL",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(830),
                            Type = "Mont"
                        },
                        new
                        {
                            DressId = 10,
                            AdditionalInformation = "Gece elbisesi.",
                            AuctionPrice = 0.0,
                            Brand = "Zara",
                            Color = "Mor",
                            EndTime = new DateTime(2025, 4, 25, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(833),
                            Image = "https://static.trendme.net/pictures/items/Gown_Dresses-beleev-full-34811-1521096.png",
                            IsActive = true,
                            Material = "İpek",
                            Price = 1300.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(832),
                            Type = "Elbise"
                        },
                        new
                        {
                            DressId = 11,
                            AdditionalInformation = "Rahat ceket.",
                            AuctionPrice = 0.0,
                            Brand = "H&M",
                            Color = "Yeşil",
                            EndTime = new DateTime(2025, 4, 19, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(835),
                            Image = "https://img.fruugo.com/product/4/38/184396384_max.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 620.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(835),
                            Type = "Ceket"
                        },
                        new
                        {
                            DressId = 12,
                            AdditionalInformation = "Günlük kullanım için.",
                            AuctionPrice = 0.0,
                            Brand = "Koton",
                            Color = "Bej",
                            EndTime = new DateTime(2025, 4, 21, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(838),
                            Image = "https://image.hm.com/assets/hm/d9/b0/d9b0ef8759858d08b00213d50b2cf3d07ad51a0b.jpg?imwidth=1260",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 340.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(837),
                            Type = "Pantolon"
                        },
                        new
                        {
                            DressId = 13,
                            AdditionalInformation = "Klasik gömlek.",
                            AuctionPrice = 0.0,
                            Brand = "Pull&Bear",
                            Color = "Krem",
                            EndTime = new DateTime(2025, 4, 20, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(840),
                            Image = "https://img.pttavm.com/pimages/592/109/017/619c1af6200cb.jpg?v=201910111530",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 260.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(840),
                            Type = "Gömlek"
                        },
                        new
                        {
                            DressId = 14,
                            AdditionalInformation = "Klasik siyah etek.",
                            AuctionPrice = 0.0,
                            Brand = "Zara",
                            Color = "Siyah",
                            EndTime = new DateTime(2025, 4, 22, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(844),
                            Image = "https://i.pinimg.com/736x/96/0c/37/960c378179e9b29c5847a82c61b85597.jpg",
                            IsActive = true,
                            Material = "İpek",
                            Price = 500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(843),
                            Type = "Etek"
                        },
                        new
                        {
                            DressId = 15,
                            AdditionalInformation = "Sıcak tutar.",
                            AuctionPrice = 0.0,
                            Brand = "Defacto",
                            Color = "Kahverengi",
                            EndTime = new DateTime(2025, 4, 26, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(846),
                            Image = "https://cdn-kaspi.kz/shop/medias/sys_master/images/images/h09/h44/12600490983454/defacto-m3916azkzka-odnotonnaa-koricnevaa-s-100253406-1.jpg",
                            IsActive = true,
                            Material = "Yün",
                            Price = 950.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "XL",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(846),
                            Type = "Mont"
                        },
                        new
                        {
                            DressId = 16,
                            AdditionalInformation = "Ofis stili.",
                            AuctionPrice = 0.0,
                            Brand = "Colins",
                            Color = "Gri",
                            EndTime = new DateTime(2025, 4, 23, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(849),
                            Image = "https://damat.akinoncdn.com/products/2020/05/20/92520/89474065-e82b-41c1-a813-ac6246e9c702.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 380.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(848),
                            Type = "Pantolon"
                        },
                        new
                        {
                            DressId = 17,
                            AdditionalInformation = "Klasik model.",
                            AuctionPrice = 0.0,
                            Brand = "Mavi",
                            Color = "Koyu Mavi",
                            EndTime = new DateTime(2025, 4, 21, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(852),
                            Image = "https://cdn1.ozone.ru/s3/multimedia-o/6402400572.jpg",
                            IsActive = true,
                            Material = "Denim",
                            Price = 740.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "L",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(851),
                            Type = "Kot Ceket"
                        },
                        new
                        {
                            DressId = 18,
                            AdditionalInformation = "Yazlık mini elbise.",
                            AuctionPrice = 0.0,
                            Brand = "Koton",
                            Color = "Turuncu",
                            EndTime = new DateTime(2025, 4, 19, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(854),
                            Image = "https://i.pinimg.com/736x/e7/5e/ad/e75ead373ee51b444de933ebdeb496b4.jpg",
                            IsActive = true,
                            Material = "Keten",
                            Price = 430.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(854),
                            Type = "Elbise"
                        },
                        new
                        {
                            DressId = 19,
                            AdditionalInformation = "Uygun fiyatlı.",
                            AuctionPrice = 0.0,
                            Brand = "LC Waikiki",
                            Color = "Bordo",
                            EndTime = new DateTime(2025, 4, 18, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(857),
                            Image = "https://i.pinimg.com/736x/f3/34/5e/f3345ecb108705185244ccf6da76971b.jpg",
                            IsActive = true,
                            Material = "Pamuk",
                            Price = 210.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "S",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(857),
                            Type = "Etek"
                        },
                        new
                        {
                            DressId = 20,
                            AdditionalInformation = "Nefes alır kumaş.",
                            AuctionPrice = 0.0,
                            Brand = "H&M",
                            Color = "Beyaz",
                            EndTime = new DateTime(2025, 4, 25, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(859),
                            Image = "https://www.ilkkimbuldu.com/wp-content/uploads/2015/03/gomlek.jpg",
                            IsActive = true,
                            Material = "Keten",
                            Price = 290.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            Size = "M",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(859),
                            Type = "Gömlek"
                        });
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Electronic", b =>
                {
                    b.Property<int>("ElectronicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElectronicId"));

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturingYear")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ElectronicId");

                    b.HasIndex("SellerId");

                    b.ToTable("Electronics");

                    b.HasData(
                        new
                        {
                            ElectronicId = 1,
                            AdditionalInformation = "Az kullanılmış, kutulu",
                            AuctionPrice = 0.0,
                            Brand = "Apple",
                            EndTime = new DateTime(2025, 4, 23, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9902),
                            Image = "https://cdn1.ozone.ru/s3/multimedia-w/6381880868.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Model = "iPhone 13",
                            Price = 999.99m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9886)
                        },
                        new
                        {
                            ElectronicId = 2,
                            AdditionalInformation = "Garantili",
                            AuctionPrice = 0.0,
                            Brand = "Samsung",
                            EndTime = new DateTime(2025, 4, 20, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9913),
                            Image = "https://img.teknolojioku.com/rcman/Cw820h547q95gm/storage/files/images/2022/09/22/jj-rNA5.png",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Model = "Galaxy S22",
                            Price = 899.99m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9912)
                        },
                        new
                        {
                            ElectronicId = 3,
                            AdditionalInformation = "2 kol ile birlikte",
                            AuctionPrice = 0.0,
                            Brand = "Sony",
                            EndTime = new DateTime(2025, 4, 27, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9920),
                            Image = "https://img.pttavm.com/pimages/592/187/469/6294c4825c11b.jpg?v=201910111530",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Model = "PlayStation 5",
                            Price = 699.99m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9915)
                        },
                        new
                        {
                            ElectronicId = 4,
                            AdditionalInformation = "Kutu dahil",
                            AuctionPrice = 0.0,
                            Brand = "Microsoft",
                            EndTime = new DateTime(2025, 4, 22, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9922),
                            Image = "https://cdn.webshopapp.com/shops/105494/files/447854700/image.jpg",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Model = "Xbox Series X",
                            Price = 649.99m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9922)
                        },
                        new
                        {
                            ElectronicId = 5,
                            AdditionalInformation = "Hafif çizik",
                            AuctionPrice = 0.0,
                            Brand = "Dell",
                            EndTime = new DateTime(2025, 4, 18, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9925),
                            Image = "https://cdn.computerhoy.com/sites/navi.axelspringer.es/public/media/image/2017/03/227210-imagenes-dell-xps-13-9360.jpg?tf=3840x",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Model = "XPS 13",
                            Price = 1200.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9925)
                        },
                        new
                        {
                            ElectronicId = 6,
                            AdditionalInformation = "Touch ekran",
                            AuctionPrice = 0.0,
                            Brand = "HP",
                            EndTime = new DateTime(2025, 4, 21, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9928),
                            Image = "https://www.01net.com/app/uploads/2022/03/1256x708-Recupere.jpg",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Model = "Spectre x360",
                            Price = 1300.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9927)
                        },
                        new
                        {
                            ElectronicId = 7,
                            AdditionalInformation = "Pil döngüsü 50",
                            AuctionPrice = 0.0,
                            Brand = "Apple",
                            EndTime = new DateTime(2025, 4, 24, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9931),
                            Image = "https://media.cnn.com/api/v1/images/stellar/prod/201116214440-9-macbook-air-review-silicon-underscoredjpg.jpg?q=x_0,y_41,h_1471,w_2615,c_crop",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Model = "MacBook Air M1",
                            Price = 999.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9931)
                        },
                        new
                        {
                            ElectronicId = 8,
                            AdditionalInformation = "İş için ideal",
                            AuctionPrice = 0.0,
                            Brand = "Lenovo",
                            EndTime = new DateTime(2025, 4, 19, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9935),
                            Image = "https://m.media-amazon.com/images/I/51546BBLofL.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Model = "ThinkPad X1 Carbon",
                            Price = 1100.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9934)
                        },
                        new
                        {
                            ElectronicId = 9,
                            AdditionalInformation = "Fotoğrafçılar için ideal",
                            AuctionPrice = 0.0,
                            Brand = "Canon",
                            EndTime = new DateTime(2025, 4, 25, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9937),
                            Image = "https://technovybor.ru/wa-data/public/shop/products/50/51/5150/images/15431/15431.970.jpg",
                            IsActive = true,
                            ManufacturingYear = 2019,
                            Model = "EOS R",
                            Price = 1500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9937)
                        },
                        new
                        {
                            ElectronicId = 10,
                            AdditionalInformation = "Hobi için drone",
                            AuctionPrice = 0.0,
                            Brand = "DJI",
                            EndTime = new DateTime(2025, 4, 23, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9941),
                            Image = "https://ir.ozone.ru/s3/multimedia-h/6747076745.jpg",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Model = "Mavic Air 2",
                            Price = 800.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9939)
                        },
                        new
                        {
                            ElectronicId = 11,
                            AdditionalInformation = "Tablet, kalem dahil",
                            AuctionPrice = 0.0,
                            Brand = "Samsung",
                            EndTime = new DateTime(2025, 4, 18, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9944),
                            Image = "https://www.popsci.com/wp-content/uploads/2022/05/06/Best_Samsung_Tablets_Samsung_2.jpg?auto=webp",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Model = "Galaxy Tab S8",
                            Price = 600.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9943)
                        },
                        new
                        {
                            ElectronicId = 12,
                            AdditionalInformation = "11 inch ekran",
                            AuctionPrice = 0.0,
                            Brand = "Apple",
                            EndTime = new DateTime(2025, 4, 17, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9946),
                            Image = "https://i0.wp.com/www.smartprix.com/bytes/wp-content/uploads/2023/11/2024-iPad-Pro.jpg?ssl=1&quality=80&w=1200",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Model = "iPad Pro",
                            Price = 1000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9946)
                        },
                        new
                        {
                            ElectronicId = 13,
                            AdditionalInformation = "Gürültü engelleme",
                            AuctionPrice = 0.0,
                            Brand = "Bose",
                            EndTime = new DateTime(2025, 4, 16, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9973),
                            Image = "https://cdn.ecoustics.com/db0/wblob/17BA35E873D594/2CD8/43823/rQ3KUloKebyvMFSklo9j8LjXtnwKqdN6s0ssjUoYrME/bose-quietcomfort-45-side-view.jpg",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Model = "QuietComfort 45",
                            Price = 299.99m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9972)
                        },
                        new
                        {
                            ElectronicId = 14,
                            AdditionalInformation = "Kulak üstü kulaklık",
                            AuctionPrice = 0.0,
                            Brand = "Sony",
                            EndTime = new DateTime(2025, 4, 20, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9975),
                            Image = "https://sonyimages.blob.core.windows.net/productr/large/WH1000XM4W.CE7_0.png",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Model = "WH-1000XM4",
                            Price = 279.99m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9975)
                        },
                        new
                        {
                            ElectronicId = 15,
                            AdditionalInformation = "Aksiyon kamerası",
                            AuctionPrice = 0.0,
                            Brand = "GoPro",
                            EndTime = new DateTime(2025, 4, 19, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9978),
                            Image = "https://salebazar.ru/wa-data/public/shop/products/35/85/8535/images/23547/23547.970.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Model = "Hero 10",
                            Price = 399.99m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9978)
                        },
                        new
                        {
                            ElectronicId = 16,
                            AdditionalInformation = "Oyun bilgisayarı",
                            AuctionPrice = 0.0,
                            Brand = "Asus",
                            EndTime = new DateTime(2025, 4, 22, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9982),
                            Image = "https://cdn.mos.cms.futurecdn.net/R2hy5frkGhqdvj5DnLthJG-1200-80.jpg",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Model = "ROG Zephyrus G14",
                            Price = 1400.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9981)
                        },
                        new
                        {
                            ElectronicId = 17,
                            AdditionalInformation = "Akıllı saat",
                            AuctionPrice = 0.0,
                            Brand = "Apple",
                            EndTime = new DateTime(2025, 4, 21, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9985),
                            Image = "https://usbs-uae.com/cdn/shop/files/S100689169_1.jpg?v=1710011028",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Model = "Apple Watch Series 7",
                            Price = 450.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 665, DateTimeKind.Local).AddTicks(9984)
                        },
                        new
                        {
                            ElectronicId = 18,
                            AdditionalInformation = "Outdoor saat",
                            AuctionPrice = 0.0,
                            Brand = "Garmin",
                            EndTime = new DateTime(2025, 4, 18, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1),
                            Image = "https://cdn.road.cc/sites/default/files/garmin-fenix-6-pro-solar-info-screen-1.jpg",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Model = "Fenix 6",
                            Price = 500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1)
                        },
                        new
                        {
                            ElectronicId = 19,
                            AdditionalInformation = "Gamer laptop",
                            AuctionPrice = 0.0,
                            Brand = "Razer",
                            EndTime = new DateTime(2025, 4, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(4),
                            Image = "https://m.media-amazon.com/images/I/71kBeFDgCkL._AC_UY654_QL65_.jpg",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Model = "Blade 15",
                            Price = 1600.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(4)
                        },
                        new
                        {
                            ElectronicId = 20,
                            AdditionalInformation = "4K OLED TV",
                            AuctionPrice = 0.0,
                            Brand = "LG",
                            EndTime = new DateTime(2025, 4, 26, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(7),
                            Image = "https://www.techspot.com/images/products/2020/monitors/org/2020-10-11-product-7.jpg",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Model = "OLED CX",
                            Price = 1800.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(6)
                        });
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Estate", b =>
                {
                    b.Property<int>("EstateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstateId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomCount")
                        .HasColumnType("int");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SquareMeters")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstateId");

                    b.HasIndex("SellerId");

                    b.ToTable("Estates");

                    b.HasData(
                        new
                        {
                            EstateId = 1,
                            Address = "İstanbul, Beşiktaş",
                            AuctionPrice = 3550000.0,
                            Description = "Mükemmel manzara",
                            EndTime = new DateTime(2025, 4, 20, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(673),
                            Image = "https://imaj.emlakjet.com/listing/13997410/09F58EA71BC6D024AA36F5216DABBE8113997410.jpeg",
                            IsActive = true,
                            Price = 3500000m,
                            RoomCount = 3,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 120,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(669),
                            Title = "Deniz Manzaralı Daire"
                        },
                        new
                        {
                            EstateId = 2,
                            Address = "İzmir, Urla",
                            AuctionPrice = 8550000.0,
                            Description = "Havuzlu, güvenlikli site içinde",
                            EndTime = new DateTime(2025, 4, 23, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(680),
                            Image = "https://i.ytimg.com/vi/MzCMMzby_60/maxresdefault.jpg",
                            IsActive = true,
                            Price = 8500000m,
                            RoomCount = 5,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 300,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(680),
                            Title = "Lüks Villa"
                        },
                        new
                        {
                            EstateId = 3,
                            Address = "Ankara, Çankaya",
                            AuctionPrice = 760000.0,
                            Description = "Metroya yakın",
                            EndTime = new DateTime(2025, 4, 18, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(698),
                            Image = "https://avatars.mds.yandex.net/get-altay/5236391/2a0000017c13f1889da289e513ae60d13ddc/XXL_height",
                            IsActive = true,
                            Price = 750000m,
                            RoomCount = 1,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 45,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(698),
                            Title = "Öğrenciye Uygun 1+1"
                        },
                        new
                        {
                            EstateId = 4,
                            Address = "Bolu, Merkez",
                            AuctionPrice = 1220000.0,
                            Description = "Sessiz sakin ortam",
                            EndTime = new DateTime(2025, 4, 19, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(701),
                            Image = "https://i3.wp.com/cdn3.enuygun.com/media/lib/uploads/image/zumrut-dag-evi-bolu-genel-40931703.jpg?ssl=1",
                            IsActive = true,
                            Price = 1200000m,
                            RoomCount = 2,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 90,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(700),
                            Title = "Doğa İçinde Ev"
                        },
                        new
                        {
                            EstateId = 5,
                            Address = "Balıkesir, Edremit",
                            AuctionPrice = 960000.0,
                            Description = "Müstakil ve geniş bahçeli",
                            EndTime = new DateTime(2025, 4, 21, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(704),
                            Image = "https://imaj.emlakjet.com/listing/9566460/57B88BF66D3147EAE5B2DD0D4622D3DD9566460.jpg",
                            IsActive = true,
                            Price = 950000m,
                            RoomCount = 3,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 100,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(703),
                            Title = "Bahçeli Köy Evi"
                        },
                        new
                        {
                            EstateId = 6,
                            Address = "İstanbul, Şişli",
                            AuctionPrice = 2430000.0,
                            Description = "İşlek lokasyon",
                            EndTime = new DateTime(2025, 4, 17, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(706),
                            Image = "https://avatars.mds.yandex.net/get-altay/876204/2a0000018760cb22676f08c1a7c0f9900474/XXXL",
                            IsActive = true,
                            Price = 2400000m,
                            RoomCount = 2,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 80,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(706),
                            Title = "Şehir Merkezinde Ofis"
                        },
                        new
                        {
                            EstateId = 7,
                            Address = "İstanbul, Kadıköy",
                            AuctionPrice = 1720000.0,
                            Description = "Yüksek tavanlı modern tasarım",
                            EndTime = new DateTime(2025, 4, 20, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(709),
                            Image = "https://i.pinimg.com/736x/76/3f/b2/763fb25f64a1373223c0529ed4216ac9.jpg",
                            IsActive = true,
                            Price = 1700000m,
                            RoomCount = 1,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 70,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(708),
                            Title = "Satılık Loft Daire"
                        },
                        new
                        {
                            EstateId = 8,
                            Address = "Gebze, Kocaeli",
                            AuctionPrice = 810000.0,
                            Description = "Geniş ve yükseklik avantajlı",
                            EndTime = new DateTime(2025, 4, 18, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(712),
                            Image = "https://www.depokirala.com/images/depo/1110201716234761.jpg",
                            IsActive = true,
                            Price = 800000m,
                            RoomCount = 1,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 200,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(711),
                            Title = "Kiralık Depo Alanı"
                        },
                        new
                        {
                            EstateId = 9,
                            Address = "Antalya, Manavgat",
                            AuctionPrice = 1320000.0,
                            Description = "İmarlı tapulu",
                            EndTime = new DateTime(2025, 4, 28, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(714),
                            Image = "https://imaj.emlakjet.com/listing/14990719/77FF708C308ED1AD0B4286E24607CD1614990719.jpg",
                            IsActive = true,
                            Price = 1300000m,
                            RoomCount = 0,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 500,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(714),
                            Title = "Yatırım İçin Arsa"
                        },
                        new
                        {
                            EstateId = 10,
                            Address = "İstanbul, Sarıyer",
                            AuctionPrice = 6550000.0,
                            Description = "Eşsiz manzara ve konfor",
                            EndTime = new DateTime(2025, 4, 23, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(717),
                            Image = "https://i.pinimg.com/736x/9d/a2/71/9da271228d6e4994f01831a5f681b92b.jpg",
                            IsActive = true,
                            Price = 6500000m,
                            RoomCount = 4,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 180,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(716),
                            Title = "Boğaz Manzaralı Dubleks"
                        },
                        new
                        {
                            EstateId = 11,
                            Address = "Samsun, Atakum",
                            AuctionPrice = 875000.0,
                            Description = "Yeni yapılmış",
                            EndTime = new DateTime(2025, 4, 19, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(719),
                            Image = "https://www.hedefhalk.com/images/haberler/2024/03/atakum-ve-bafra-da-uygun-fiyatli-konut-firsati-100-metrekare-evler-sadece-600-bin-lira-4414.jpg",
                            IsActive = true,
                            Price = 870000m,
                            RoomCount = 2,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 85,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(719),
                            Title = "Uygun Fiyatlı Daire"
                        },
                        new
                        {
                            EstateId = 12,
                            Address = "Bursa, Osmangazi",
                            AuctionPrice = 625000.0,
                            Description = "Yatırımlık eşyalı",
                            EndTime = new DateTime(2025, 4, 17, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(723),
                            Image = "https://grpstat.com/DealImages/K-k3ozabt3/z35018__4_600-400.jpg",
                            IsActive = true,
                            Price = 620000m,
                            RoomCount = 1,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 40,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(723),
                            Title = "Merkezi Konumda Stüdyo"
                        },
                        new
                        {
                            EstateId = 13,
                            Address = "Eskişehir, Tepebaşı",
                            AuctionPrice = 2820000.0,
                            Description = "Aile yaşamına uygun",
                            EndTime = new DateTime(2025, 4, 22, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(726),
                            Image = "https://imaj.emlakjet.com/resize/600/375/listing/9085402/75FBB7F751DCBED3164815928CE302109085402.JPG",
                            IsActive = true,
                            Price = 2800000m,
                            RoomCount = 5,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 250,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(725),
                            Title = "Bahçeli Tripleks"
                        },
                        new
                        {
                            EstateId = 14,
                            Address = "Konya, Selçuklu",
                            AuctionPrice = 1010000.0,
                            Description = "Site içerisinde sosyal alanlı",
                            EndTime = new DateTime(2025, 4, 20, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(728),
                            Image = "https://www.yeniemlak.com/uploads/1/8/7/konya-selcukludaki-sosyal-konut-projesi-icin-dugmeye-basildi-projesi-187509-1589449370.jpeg",
                            IsActive = true,
                            Price = 1000000m,
                            RoomCount = 2,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 95,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(728),
                            Title = "Yeni Projede 2+1"
                        },
                        new
                        {
                            EstateId = 15,
                            Address = "Muğla, Fethiye",
                            AuctionPrice = 1465000.0,
                            Description = "Yaz-kış yaşam için ideal",
                            EndTime = new DateTime(2025, 4, 19, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(731),
                            Image = "https://attaches.1001tur.ru/hotels/gallery/475219/13511501989112.jpg",
                            IsActive = true,
                            Price = 1450000m,
                            RoomCount = 3,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 110,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(731),
                            Title = "Dağ Manzaralı Yazlık"
                        },
                        new
                        {
                            EstateId = 16,
                            Address = "Ankara, Kızılay",
                            AuctionPrice = 3930000.0,
                            Description = "Kurumsal firmaya özel",
                            EndTime = new DateTime(2025, 4, 18, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(734),
                            Image = "https://www.erdemavci.com/Images/LXEF4D4DB09FC5EF074DBF2E7B02D48D28.jpg",
                            IsActive = true,
                            Price = 3900000m,
                            RoomCount = 4,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 150,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(733),
                            Title = "Prestijli Ofis Katı"
                        },
                        new
                        {
                            EstateId = 17,
                            Address = "İzmir, Çeşme",
                            AuctionPrice = 12100000.0,
                            Description = "Kendine ait iskeleli",
                            EndTime = new DateTime(2025, 4, 25, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(736),
                            Image = "https://imaj.emlakjet.com/listing/10839483/366F71936E9288DB84C17959B5AEC96910839483.jpg",
                            IsActive = true,
                            Price = 12000000m,
                            RoomCount = 6,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 400,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(736),
                            Title = "Denize Sıfır Villa"
                        },
                        new
                        {
                            EstateId = 18,
                            Address = "Trabzon, Ortahisar",
                            AuctionPrice = 905000.0,
                            Description = "Aileye uygun",
                            EndTime = new DateTime(2025, 4, 19, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(739),
                            Image = "https://cdn.domaza.biz/upload/properties/82/342/8082342/49043b828df4eab15ecf8eacd0d146b21e7ef1c3.jpg",
                            IsActive = true,
                            Price = 900000m,
                            RoomCount = 3,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 100,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(739),
                            Title = "Sakin Sokakta Daire"
                        },
                        new
                        {
                            EstateId = 19,
                            Address = "Tekirdağ, Süleymanpaşa",
                            AuctionPrice = 1120000.0,
                            Description = "Yola cepheli",
                            EndTime = new DateTime(2025, 4, 27, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(742),
                            Image = "https://imaj.emlakjet.com/listing/12150201/B755205DF6D3DC20B496E4E62D58426B12150201.jpg",
                            IsActive = true,
                            Price = 1100000m,
                            RoomCount = 0,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 600,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(741),
                            Title = "Konut İmarlı Arsa"
                        },
                        new
                        {
                            EstateId = 20,
                            Address = "İstanbul, Ataşehir",
                            AuctionPrice = 2220000.0,
                            Description = "Site içi, 7/24 güvenlik",
                            EndTime = new DateTime(2025, 4, 20, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(744),
                            Image = "https://www.arkanproje.com/uploads/projects/47/fb1e8ad2a369f61ec0a980e9f1e9ecc28-5U.jpg",
                            IsActive = true,
                            Price = 2200000m,
                            RoomCount = 2,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            SquareMeters = 100,
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(744),
                            Title = "Lüks Rezidans Dairesi"
                        });
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", b =>
                {
                    b.Property<int>("MusicalInstrumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MusicalInstrumentId"));

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("MusicalInstrumentId");

                    b.HasIndex("SellerId");

                    b.ToTable("MusicalInstruments");

                    b.HasData(
                        new
                        {
                            MusicalInstrumentId = 1,
                            AuctionPrice = 0.0,
                            Brand = "Yamaha",
                            Description = "Great tone, excellent for beginners and professionals.",
                            EndTime = new DateTime(2025, 4, 20, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(918),
                            Image = "https://r.resimlink.com/f_NzYK.jpg",
                            IsActive = true,
                            Name = "Yamaha Acoustic Guitar",
                            Price = 1200.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(917)
                        },
                        new
                        {
                            MusicalInstrumentId = 2,
                            AuctionPrice = 0.0,
                            Brand = "Roland",
                            Description = "88 weighted keys, great for classical and modern styles.",
                            EndTime = new DateTime(2025, 4, 23, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(922),
                            Image = "https://r.resimlink.com/30ZcFE1CaKhd.jpg",
                            IsActive = true,
                            Name = "Roland Digital Piano",
                            Price = 3500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(922)
                        },
                        new
                        {
                            MusicalInstrumentId = 3,
                            AuctionPrice = 0.0,
                            Brand = "Fender",
                            Description = "Classic Stratocaster style, great for rock and blues.",
                            EndTime = new DateTime(2025, 4, 18, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(925),
                            Image = "https://r.resimlink.com/t16JGe.jpg",
                            IsActive = true,
                            Name = "Fender Electric Guitar",
                            Price = 4200.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(924)
                        },
                        new
                        {
                            MusicalInstrumentId = 4,
                            AuctionPrice = 0.0,
                            Brand = "Pearl",
                            Description = "Full drum kit for studio and live performance.",
                            EndTime = new DateTime(2025, 4, 27, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(927),
                            Image = "https://r.resimlink.com/nM-Twj2uo.jpg",
                            IsActive = true,
                            Name = "Pearl Drum Set",
                            Price = 5800.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(927)
                        },
                        new
                        {
                            MusicalInstrumentId = 5,
                            AuctionPrice = 0.0,
                            Brand = "Bose",
                            Description = "High quality, clear sound system for musicians.",
                            EndTime = new DateTime(2025, 4, 19, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(929),
                            Image = "https://r.resimlink.com/6KwcyBWiZ19.jpg",
                            IsActive = true,
                            Name = "Bose Sound System",
                            Price = 2500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(929)
                        },
                        new
                        {
                            MusicalInstrumentId = 6,
                            AuctionPrice = 0.0,
                            Brand = "Casio",
                            Description = "Compact, versatile keyboard with built-in sounds.",
                            EndTime = new DateTime(2025, 4, 21, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(931),
                            Image = "https://r.resimlink.com/R6rCZ1SI9EQ.jpg",
                            IsActive = true,
                            Name = "Casio Keyboard",
                            Price = 550.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(931)
                        },
                        new
                        {
                            MusicalInstrumentId = 7,
                            AuctionPrice = 0.0,
                            Brand = "Ibanez",
                            Description = "Famous for its thin neck and high-speed playability.",
                            EndTime = new DateTime(2025, 4, 25, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(942),
                            Image = "https://r.resimlink.com/x5-f3pc.jpg",
                            IsActive = true,
                            Name = "Ibanez Electric Guitar",
                            Price = 1500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(941)
                        },
                        new
                        {
                            MusicalInstrumentId = 8,
                            AuctionPrice = 0.0,
                            Brand = "Korg",
                            Description = "Professional-grade synthesizer for music production.",
                            EndTime = new DateTime(2025, 4, 22, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(944),
                            Image = "https://r.resimlink.com/bihGxBw.jpg",
                            IsActive = true,
                            Name = "Korg Synthesizer",
                            Price = 3000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(944)
                        },
                        new
                        {
                            MusicalInstrumentId = 9,
                            AuctionPrice = 0.0,
                            Brand = "Ludwig",
                            Description = "Vintage drum set with excellent sound quality.",
                            EndTime = new DateTime(2025, 4, 20, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(947),
                            Image = "https://r.resimlink.com/k7LNxSrF9CEA.jpg",
                            IsActive = true,
                            Name = "Ludwig Drum Kit",
                            Price = 4500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(946)
                        },
                        new
                        {
                            MusicalInstrumentId = 10,
                            AuctionPrice = 0.0,
                            Brand = "Shure",
                            Description = "High quality vocal microphone, great for studio recordings.",
                            EndTime = new DateTime(2025, 4, 19, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(949),
                            Image = "https://r.resimlink.com/PJrm27Svw.jpg",
                            IsActive = true,
                            Name = "Shure Microphone",
                            Price = 350.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(948)
                        },
                        new
                        {
                            MusicalInstrumentId = 11,
                            AuctionPrice = 0.0,
                            Brand = "Sennheiser",
                            Description = "Studio quality headphones with excellent noise cancellation.",
                            EndTime = new DateTime(2025, 4, 24, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(951),
                            Image = "https://r.resimlink.com/C8tPymW0XN.jpg",
                            IsActive = true,
                            Name = "Sennheiser Headphones",
                            Price = 250.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(950)
                        },
                        new
                        {
                            MusicalInstrumentId = 12,
                            AuctionPrice = 0.0,
                            Brand = "Mackie",
                            Description = "Professional studio monitors for accurate sound mixing.",
                            EndTime = new DateTime(2025, 4, 26, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(953),
                            Image = "https://r.resimlink.com/-A1dUbm.jpg",
                            IsActive = true,
                            Name = "Mackie Studio Monitors",
                            Price = 1800.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(953)
                        },
                        new
                        {
                            MusicalInstrumentId = 13,
                            AuctionPrice = 0.0,
                            Brand = "Tama",
                            Description = "Full 5-piece drum kit for drummers of all levels.",
                            EndTime = new DateTime(2025, 4, 21, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(955),
                            Image = "https://r.resimlink.com/6lvyu.jpg",
                            IsActive = true,
                            Name = "Tama Drum Set",
                            Price = 4000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(955)
                        },
                        new
                        {
                            MusicalInstrumentId = 14,
                            AuctionPrice = 0.0,
                            Brand = "Roland",
                            Description = "Electronic drum pads with great sensitivity and response.",
                            EndTime = new DateTime(2025, 4, 25, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(957),
                            Image = "https://r.resimlink.com/-oQeBiZ1lc.jpg",
                            IsActive = true,
                            Name = "Roland Drum Pads",
                            Price = 1200.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(957)
                        },
                        new
                        {
                            MusicalInstrumentId = 15,
                            AuctionPrice = 0.0,
                            Brand = "Gretsch",
                            Description = "Known for its smooth tone, great for jazz and blues.",
                            EndTime = new DateTime(2025, 4, 22, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(959),
                            Image = "https://r.resimlink.com/LXRdkC.jpg",
                            IsActive = true,
                            Name = "Gretsch Electric Guitar",
                            Price = 2200.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(959)
                        },
                        new
                        {
                            MusicalInstrumentId = 16,
                            AuctionPrice = 0.0,
                            Brand = "Vox",
                            Description = "Classic British tone, perfect for rock guitarists.",
                            EndTime = new DateTime(2025, 4, 28, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(961),
                            Image = "https://r.resimlink.com/6iRCvrHE-7.jpg",
                            IsActive = true,
                            Name = "Vox Amplifier",
                            Price = 1500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(961)
                        },
                        new
                        {
                            MusicalInstrumentId = 17,
                            AuctionPrice = 0.0,
                            Brand = "Martin",
                            Description = "Legendary acoustic guitars known for their excellent sound.",
                            EndTime = new DateTime(2025, 4, 27, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(964),
                            Image = "https://r.resimlink.com/wn_rYdNmZ1.jpg",
                            IsActive = true,
                            Name = "Martin Acoustic Guitar",
                            Price = 3000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(963)
                        },
                        new
                        {
                            MusicalInstrumentId = 18,
                            AuctionPrice = 0.0,
                            Brand = "Peavey",
                            Description = "Great bass guitar for beginners and intermediate players.",
                            EndTime = new DateTime(2025, 4, 23, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(966),
                            Image = "https://r.resimlink.com/93XLlAhyr.jpg",
                            IsActive = true,
                            Name = "Peavey Bass Guitar",
                            Price = 800.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(965)
                        },
                        new
                        {
                            MusicalInstrumentId = 19,
                            AuctionPrice = 0.0,
                            Brand = "Line 6",
                            Description = "Modern amp with tons of effects and high-quality sound.",
                            EndTime = new DateTime(2025, 4, 24, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(968),
                            Image = "https://r.resimlink.com/RgQaxI63jm.jpg",
                            IsActive = true,
                            Name = "Line 6 Guitar Amp",
                            Price = 1300.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(967)
                        },
                        new
                        {
                            MusicalInstrumentId = 20,
                            AuctionPrice = 0.0,
                            Brand = "Pearl",
                            Description = "High-quality snare drum, great for any drum set.",
                            EndTime = new DateTime(2025, 4, 25, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(970),
                            Image = "https://r.resimlink.com/BjpLO6kvUSq.jpg",
                            IsActive = true,
                            Name = "Pearl Snare Drum",
                            Price = 350.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 20, 31, 32, 666, DateTimeKind.Utc).AddTicks(970)
                        });
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DressId")
                        .HasColumnType("int");

                    b.Property<int>("ElectronicId")
                        .HasColumnType("int");

                    b.Property<int>("EstateId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MusicalInstrumentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StripePaymentIntentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("PaymentId");

                    b.HasIndex("DressId")
                        .IsUnique();

                    b.HasIndex("ElectronicId")
                        .IsUnique();

                    b.HasIndex("EstateId")
                        .IsUnique();

                    b.HasIndex("MusicalInstrumentId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("PaymentHistories");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<string>("AdditionalInformation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AuctionPrice")
                        .HasColumnType("float");

                    b.Property<string>("BrandAndModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EngineCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ManufacturingYear")
                        .HasColumnType("int");

                    b.Property<int>("Millage")
                        .HasColumnType("int");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("VehicleId");

                    b.HasIndex("SellerId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            VehicleId = 1,
                            AdditionalInformation = "Excellent condition, single owner",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Toyota Camry",
                            Color = "Silver",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1025),
                            EngineCapacity = 2.5m,
                            Image = "https://i.gaw.to/content/photos/39/21/392165_2020_Toyota_Camry.jpg",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Millage = 15000,
                            PlateNumber = "34AA21",
                            Price = 25000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1023)
                        },
                        new
                        {
                            VehicleId = 2,
                            AdditionalInformation = "Good condition, one previous owner",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Honda Civic",
                            Color = "Blue",
                            EndTime = new DateTime(2025, 5, 7, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1030),
                            EngineCapacity = 1.8m,
                            Image = "https://i.pinimg.com/originals/4f/b7/96/4fb796d99758f4889338c69efc74dbfe.jpg",
                            IsActive = false,
                            ManufacturingYear = 2019,
                            Millage = 20000,
                            PlateNumber = "34AA21",
                            Price = 18000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1030)
                        },
                        new
                        {
                            VehicleId = 3,
                            AdditionalInformation = "Low mileage, well-maintained",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Ford F-150",
                            Color = "Red",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1034),
                            EngineCapacity = 5.0m,
                            Image = "https://www.autopartmax.com/images/cUpload/FORD%20Truck-F150%20Raptor.jpg",
                            IsActive = true,
                            ManufacturingYear = 2018,
                            Millage = 25000,
                            PlateNumber = "34AA21",
                            Price = 28000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1033)
                        },
                        new
                        {
                            VehicleId = 4,
                            AdditionalInformation = "Great condition, low mileage",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Nissan Altima",
                            Color = "Black",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1037),
                            EngineCapacity = 2.5m,
                            Image = "https://www.jonathanmotorcars.com/imagetag/631/3/l/Used-2017-Nissan-Altima-25-SV-Premium.jpg",
                            IsActive = true,
                            ManufacturingYear = 2017,
                            Millage = 30000,
                            PlateNumber = "34AA21",
                            Price = 16000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1036)
                        },
                        new
                        {
                            VehicleId = 5,
                            AdditionalInformation = "Well-maintained, single owner",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Chevrolet Malibu",
                            Color = "Silver",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1040),
                            EngineCapacity = 2.4m,
                            Image = "https://www.carscoops.com/wp-content/uploads/2023/01/2021-Chevrolet-Malibu.jpg",
                            IsActive = true,
                            ManufacturingYear = 2017,
                            Millage = 28000,
                            PlateNumber = "34AA21",
                            Price = 15500.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1039)
                        },
                        new
                        {
                            VehicleId = 6,
                            AdditionalInformation = "Like new, low mileage",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Ferrari 488 GTB",
                            Color = "Red",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1043),
                            EngineCapacity = 3.9m,
                            Image = "https://i.pinimg.com/originals/93/2e/fb/932efb625cc97155497cfabd53a57d71.jpg",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Millage = 1000,
                            PlateNumber = "34AA21",
                            Price = 300000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1042)
                        },
                        new
                        {
                            VehicleId = 7,
                            AdditionalInformation = "Excellent condition, one owner",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Lamborghini Huracan",
                            Color = "Yellow",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1047),
                            EngineCapacity = 5.2m,
                            Image = "https://i.pinimg.com/originals/8c/bf/63/8cbf631f6c9cf107cde59ee72c4e79f6.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Millage = 2000,
                            PlateNumber = "34AA21",
                            Price = 280000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1046)
                        },
                        new
                        {
                            VehicleId = 8,
                            AdditionalInformation = "Low mileage, well-maintained",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Porsche 911",
                            Color = "White",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1050),
                            EngineCapacity = 3.0m,
                            Image = "https://avatars.mds.yandex.net/get-autoru-vos/6209275/1ee5dfabd4030a68195d9ac37ebf08b2/1200x900",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Millage = 5000,
                            PlateNumber = "34AA21",
                            Price = 180000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1049)
                        },
                        new
                        {
                            VehicleId = 9,
                            AdditionalInformation = "Excellent condition, low mileage",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Aston Martin DB11",
                            Color = "Black",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1052),
                            EngineCapacity = 5.2m,
                            Image = "https://images.hgmsites.net/hug/2018-aston-martin-db11_100630564_h.jpg",
                            IsActive = true,
                            ManufacturingYear = 2019,
                            Millage = 6000,
                            PlateNumber = "34AA21",
                            Price = 250000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1052)
                        },
                        new
                        {
                            VehicleId = 10,
                            AdditionalInformation = "Like new, low mileage",
                            AuctionPrice = 0.0,
                            BrandAndModel = "McLaren 720S",
                            Color = "Orange",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1055),
                            EngineCapacity = 4.0m,
                            Image = "https://www.mclarencf.com/imagetag/42/main/l/New-2020-McLaren-720S-Spider.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Millage = 4000,
                            PlateNumber = "34AA21",
                            Price = 280000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1055)
                        },
                        new
                        {
                            VehicleId = 11,
                            AdditionalInformation = "Rare, collector's item",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Bugatti Chiron",
                            Color = "Blue",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1058),
                            EngineCapacity = 8.0m,
                            Image = "https://coolwallpapers.me/picsup/5650604-bugatti-chiron-wallpapers.jpg",
                            IsActive = true,
                            ManufacturingYear = 2018,
                            Millage = 3000,
                            PlateNumber = "34AA21",
                            Price = 350000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1058)
                        },
                        new
                        {
                            VehicleId = 12,
                            AdditionalInformation = "High-performance masterpiece",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Koenigsegg Jesko",
                            Color = "Silver",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1061),
                            EngineCapacity = 5.0m,
                            Image = "https://wallpapercave.com/wp/wp5031567.jpg",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Millage = 1500,
                            PlateNumber = "34AA21",
                            Price = 400000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1061)
                        },
                        new
                        {
                            VehicleId = 13,
                            AdditionalInformation = "Hybrid supercar, low mileage",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Ferrari SF90 Stradale",
                            Color = "Red",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1065),
                            EngineCapacity = 4.0m,
                            Image = "https://icdn.ensonhaber.com/crop/1200x675/resimler/diger/kok/2022/08/10/ferrari_1720.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Millage = 2000,
                            PlateNumber = "34AA21",
                            Price = 275000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1065)
                        },
                        new
                        {
                            VehicleId = 14,
                            AdditionalInformation = "Exotic masterpiece, low mileage",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Pagani Huayra",
                            Color = "Green",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1068),
                            EngineCapacity = 6.0m,
                            Image = "https://www.motorionline.com/wp-content/gallery/pagani-huayra-nc/Pagani-Huayra-NC-1.jpg",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Millage = 2500,
                            PlateNumber = "34AA21",
                            Price = 320000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1067)
                        },
                        new
                        {
                            VehicleId = 15,
                            AdditionalInformation = "Luxury sports coupe",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Lexus LC 500",
                            Color = "Black",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1071),
                            EngineCapacity = 5.0m,
                            Image = "https://wallpapercave.com/wp/wp6603188.jpg",
                            IsActive = true,
                            ManufacturingYear = 2019,
                            Millage = 5000,
                            PlateNumber = "34AA21",
                            Price = 60000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1070)
                        },
                        new
                        {
                            VehicleId = 16,
                            AdditionalInformation = "High-performance electric car",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Tesla Model S",
                            Color = "Blue",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1074),
                            EngineCapacity = 0.0m,
                            Image = "https://i.pinimg.com/originals/8f/b4/3b/8fb43b750028af047cbb0308c0e46014.jpg",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Millage = 1500,
                            PlateNumber = "34AA21",
                            Price = 90000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1073)
                        },
                        new
                        {
                            VehicleId = 17,
                            AdditionalInformation = "Luxury sports car, low mileage",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Audi R8",
                            Color = "Silver",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1077),
                            EngineCapacity = 5.2m,
                            Image = "https://wallpapercave.com/wp/wp8343229.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Millage = 3000,
                            PlateNumber = "34AA21",
                            Price = 120000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1076)
                        },
                        new
                        {
                            VehicleId = 18,
                            AdditionalInformation = "High-performance luxury car",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Mercedes-AMG GT",
                            Color = "Black",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1080),
                            EngineCapacity = 4.0m,
                            Image = "https://images.hdqwalls.com/download/mercedes-benz-sls-amg-yellow-5k-hv-3840x2400.jpg",
                            IsActive = true,
                            ManufacturingYear = 2020,
                            Millage = 4000,
                            PlateNumber = "34AA21",
                            Price = 110000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1079)
                        },
                        new
                        {
                            VehicleId = 19,
                            AdditionalInformation = "High-performance Japanese sports car",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Nissan GT-R",
                            Color = "Blue",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1086),
                            EngineCapacity = 3.8m,
                            Image = "https://i.pinimg.com/originals/e9/75/81/e97581a73660b583b1d982ef23607c24.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Millage = 2500,
                            PlateNumber = "34AA21",
                            Price = 95000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1085)
                        },
                        new
                        {
                            VehicleId = 20,
                            AdditionalInformation = "High-performance American muscle car",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Ford Mustang Shelby GT500",
                            Color = "Red",
                            EndTime = new DateTime(2025, 6, 24, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1089),
                            EngineCapacity = 5.2m,
                            Image = "https://www.mustangspecs.com/wp-content/uploads/2022/09/carpixel.net-2022-shelby-gt500-mustang-heritage-edition-106565-hd.jpg",
                            IsActive = true,
                            ManufacturingYear = 2022,
                            Millage = 1500,
                            PlateNumber = "34AA21",
                            Price = 75000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1088)
                        },
                        new
                        {
                            VehicleId = 21,
                            AdditionalInformation = "Sports car with exceptional handling",
                            AuctionPrice = 0.0,
                            BrandAndModel = "Porsche Cayman GT4",
                            Color = "Yellow",
                            EndTime = new DateTime(2025, 5, 31, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1091),
                            EngineCapacity = 4.0m,
                            Image = "https://www.topgear.com/sites/default/files/2022/03/1-Porsche-Cayman-GT4-RS.jpg",
                            IsActive = true,
                            ManufacturingYear = 2021,
                            Millage = 3500,
                            PlateNumber = "34AA21",
                            Price = 95000.00m,
                            SellerId = "9defb4b8-7df0-4f6a-a49a-ddc0c68c9079",
                            StartTime = new DateTime(2025, 4, 13, 23, 31, 32, 666, DateTimeKind.Local).AddTicks(1091)
                        });
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Bid", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Dress", "Dress")
                        .WithMany("Bids")
                        .HasForeignKey("DressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Electronic", "Electronic")
                        .WithMany("Bids")
                        .HasForeignKey("ElectronicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Estate", "Estate")
                        .WithMany("Bids")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", "MusicalInstrument")
                        .WithMany("Bids")
                        .HasForeignKey("MusicalInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "User")
                        .WithMany("Bids")
                        .HasForeignKey("UserId");

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Vehicle", "Vehicle")
                        .WithMany("Bids")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dress");

                    b.Navigation("Electronic");

                    b.Navigation("Estate");

                    b.Navigation("MusicalInstrument");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Dress", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("Dresses")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Electronic", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("Electronics")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Estate", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("Estates")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("MusicalInstruments")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Dress", "Dress")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "DressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Electronic", "Electronic")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "ElectronicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Estate", "Estate")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "EstateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", "MusicalInstrument")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "MusicalInstrumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "User")
                        .WithMany("PaymentHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyGalaxy_Auction_Data_Access.Domain.Vehicle", "Vehicle")
                        .WithOne("Payment")
                        .HasForeignKey("MyGalaxy_Auction_Data_Access.Domain.PaymentHistory", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dress");

                    b.Navigation("Electronic");

                    b.Navigation("Estate");

                    b.Navigation("MusicalInstrument");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Vehicle", b =>
                {
                    b.HasOne("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", "Seller")
                        .WithMany("Vehicles")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Dress", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Electronic", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Estate", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.MusicalInstrument", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Domain.Vehicle", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Payment");
                });

            modelBuilder.Entity("MyGalaxy_Auction_Data_Access.Models.ApplicationUser", b =>
                {
                    b.Navigation("Bids");

                    b.Navigation("Dresses");

                    b.Navigation("Electronics");

                    b.Navigation("Estates");

                    b.Navigation("MusicalInstruments");

                    b.Navigation("PaymentHistories");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
